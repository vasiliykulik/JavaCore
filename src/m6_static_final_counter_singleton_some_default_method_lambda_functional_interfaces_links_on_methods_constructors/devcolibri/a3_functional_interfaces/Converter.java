package src.m6_static_final_counter_singleton_some_default_method_lambda_functional_interfaces_links_on_methods_constructors.devcolibri.a3_functional_interfaces;

/**
 * Created by Стрела on 26.09.2016.
 *
 *
 3. Функциональные Интерфейсы
 Функциональные интерфейсы тесно связаны с Lambda выражениями, как? Это мы сейчас разберем.

 Каждому Lambda выражению соответствует тип, представленный интерфейсом. Именно этот интерфейс и называется Функциональным интерфейсом. Этот интерфейс должен содержать только один абстрактный метод (абстрактный метод — метод, который не имеет default реализации).

 Скорее всего, вы уже подумали, как же это тупо, ведь я не всегда могу уследить и написать больше чем один метод. Согласен, но этого не будет, так как за этим будет следить специальная аннотация @FunctionalInterface.

 Данная аннотация будет сигнализировать Java об ошибке, если вы попытаетесь написать больше одного абстрактного метода:
 */
@FunctionalInterface
public interface Converter<F, T> {
    T convert(F f);
}
